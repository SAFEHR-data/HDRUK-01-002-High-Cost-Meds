---
title: "results_summary"
format: docx
editor: visual  
---

```{r, echo = FALSE, warning = FALSE, message=FALSE}
library(here)
library(stringr)
library(dplyr)
library(ggplot2)
library(omopgenerics)
library(CohortCharacteristics)
library(tidytext)
library(CodelistGenerator)
library(OmopSketch)
library(tidyr)
library(visOmopResults)
library(ggh4x)
library(viridis)

atc_ref <- readr::read_csv("atc_ref.csv") |> 
  mutate(cohort_name = name)

res <- importSummarisedResult(here::here("data"))
res <- res |> 
  mutate(cdm_name = if_else(cdm_name == "GOSH_OMOP", "GOSH", cdm_name)) |> 
  mutate(cdm_name = if_else(str_detect(tolower(cdm_name), "idril"), "Lancs", cdm_name)) |>  
  mutate(cdm_name = if_else(str_detect(cdm_name, "Barts"), "Barts", cdm_name)) |> 
  mutate(cdm_name = if_else(str_detect(cdm_name, "UCLH-from-2019-v2"), "UCLH", cdm_name))


res <- res |>
  mutate(variable_level = case_when(
    variable_level == "C56 malignant neoplasm of ovary" ~ "Ovarian Cancer",
    variable_level == "I270 primary pulmonary hypertension" ~ "Pulmonary Hypertension",
    variable_level == "C92 myeloid leukaemia" ~ "Myeloid Leukemia",
    variable_level == "C53 malignant neoplasm of cervix uteri" ~ "Cervical Cancer",
    variable_level == "C91 lymphoid leukaemia" ~ "Lymphoid Leukemia",
    variable_level == "J45 asthma" ~ "Asthma",
    variable_level == "N17 n19 renal failure" ~ "Renal Failure",
    variable_level == "C50 malignant neoplasm of breast" ~ "Breast Cancer",
    variable_level == "D55 d59 haemolytic anaemias" ~ "Hemolytic Anemias",
    variable_level == "E22 hyperfunction of pituitary gland" ~ "Pituitary Gland Hyperfunction",
    variable_level == "C34 malignant neoplasm of bronchus and lung" ~ "Lung Cancer",
    variable_level == "D65 d69 coagulation defects purpura and other haemorrhagic conditions" ~ "Coagulation and Hemorrhagic Disorders",
    variable_level == "M32 systemic lupus erythematosus" ~ "Systemic Lupus Erythematosus",
    variable_level == "C73 c75 malignant neoplasms of thyroid and other endocrine glands" ~ "Thyroid and Endocrine Gland Cancers",
    variable_level == "E84 cystic fibrosis" ~ "Cystic Fibrosis",
    variable_level == "G35 multiple sclerosis" ~ "Multiple Sclerosis",
    variable_level == "B16 acute hepatitis b" ~ "Acute Hepatitis B",
    variable_level == "C15 c26 malignant neoplasms of digestive organs" ~ "Digestive System Cancers",
    variable_level == "D70 agranulocytosis" ~ "Agranulocytosis",
    variable_level == "C81 hodgkin lymphoma" ~ "Hodgkin Lymphoma",
    variable_level == "C45 mesothelioma" ~ "Mesothelioma",
    variable_level == "C71 malignant neoplasm of brain" ~ "Brain Cancer",
    variable_level == "Z940 kidney transplant status" ~ "Kidney Transplant Status",
    variable_level == "C83 non follicular lymphoma" ~ "Non-Follicular Lymphoma",
    variable_level == "G710 muscular dystrophy" ~ "Muscular Dystrophy",
    variable_level == "C900 multiple myeloma" ~ "Multiple Myeloma",
    variable_level == "B20 b24 human immunodeficiency virus hiv disease" ~ "HIV/AIDS",
    variable_level == "C82 follicular lymphoma" ~ "Follicular Lymphoma",
    variable_level == "C64 c68 malignant neoplasms of urinary tract" ~ "Urinary Tract Cancers",
    variable_level == "B15 acute hepatitis a" ~ "Acute Hepatitis A",
    variable_level == "A15 a19 tuberculosis" ~ "Tuberculosis",
    variable_level == "C61 malignant neoplasm of prostate" ~ "Prostate Cancer",
variable_level == "B25 cytomegaloviral disease" ~ "Cytomegalovirus",
variable_level == "A047 enterocolitis due to clostridium difficile" ~ "C. diff",
variable_level == "A099 gastroenteritis and colitis of unspecified origin" ~ "Gastroenteritis",
variable_level == "A41 other sepsis" ~ "Sepsis",
variable_level == "C40 malignant neoplasm of bone and articular cartilage of limbs" ~ "Bone cancer",
variable_level == "C49 malignant neoplasm of other connective and soft tissue" ~ "Soft tissue cancer",
variable_level == "C54 malignant neoplasm of corpus uteri" ~ "Uterine cancer",
variable_level == "D570 sickle cell anaemia with crisis" ~ "Sickle cell crisis",
variable_level == "E21 hyperparathyroidism and other disorders of parathyroid gland" ~ "Parathyroid disorder",
variable_level == "E870 hyperosmolality and hypernatraemia" ~ "Hypernatremia",
variable_level == "E871 hypo osmolality and hyponatraemia" ~ "Hyponatremia",
variable_level == "E872 acidosis" ~ "Acidosis",
variable_level == "E873 alkalosis" ~ "Alkalosis",
variable_level == "E875 hyperkalaemia" ~ "Hyperkalemia",
variable_level == "E876 hypokalaemia" ~ "Hypokalemia",
variable_level == "E877 fluid overload" ~ "Fluid overload",
variable_level == "G20 parkinson disease" ~ "Parkinson's disease",
variable_level == "G936 cerebral oedema" ~ "Cerebral edema",
variable_level == "I517 cardiomegaly" ~ "Cardiomegaly",
variable_level == "I63 cerebral infarction" ~ "Stroke",
variable_level == "J12 viral pneumonia not elsewhere classified" ~ "Viral pneumonia",
variable_level == "J18 pneumonia organism unspecified" ~ "Unspecified pneumonia",
variable_level == "J22 unspecified acute lower respiratory infection" ~ "Lower respiratory infection",
variable_level == "J440 chronic obstructive pulmonary disease with acute lower respiratory infection" ~ "COPD with infection",
variable_level == "J47 bronchiectasis" ~ "Bronchiectasis",
variable_level == "J960 acute respiratory failure" ~ "Respiratory failure",
variable_level == "J9600 acute respiratory failure type i hypoxic" ~ "Hypoxic respiratory failure",
variable_level == "J9601 acute respiratory failure type ii hypercapnic" ~ "Hypercapnic respiratory failure",
variable_level == "J981 pulmonary collapse" ~ "Pulmonary collapse",
variable_level == "K21 gastro oesophageal reflux disease" ~ "GERD",
variable_level == "K50 crohn disease regional enteritis" ~ "Crohn's disease",
variable_level == "K51 ulcerative colitis" ~ "Ulcerative colitis",
variable_level == "L03 cellulitis" ~ "Cellulitis",
variable_level == "L97 ulcer of lower limb not elsewhere classified" ~ "Leg ulcer",
variable_level == "M06 other rheumatoid arthritis" ~ "Rheumatoid arthritis",
variable_level == "M81 osteoporosis without pathological fracture" ~ "Osteoporosis",
variable_level == "N390 urinary tract infection site not specified" ~ "UTI",
variable_level == "Q20 q28 congenital malformations of the circulatory system" ~ "Congenital circulatory malformation",
variable_level == "Q21 congenital malformations of cardiac septa" ~ "Cardiac septal defect",
variable_level == "Q899 congenital malformation unspecified" ~ "Unspecified congenital defect",
variable_level == "R11 nausea and vomiting" ~ "Nausea & vomiting",
variable_level == "R50 fever of other and unknown origin" ~ "Fever",
variable_level == "T86 failure and rejection of transplanted organs and tissues" ~ "Transplant rejection",
variable_level == "U071 covid 19 virus identified" ~ "Covid-19",
    TRUE ~ variable_level  
  ))

counts <- tidy(res |> 
                 filterSettings(result_type == "summarise_characteristics")) |> 
  filter(variable_name %in% c("Number records", "Number subjects")) |> 
  filter(variable_name == "Number subjects") |> 
  select("cdm_name", "cohort_name", "count") |> 
  arrange(desc(cohort_name))


custom_colors <- c("Barts" = "#e41a1c",
                   "GOSH" = "#377eb8", 
                   "Lancs" = "#4daf4a", 
                   "UCLH" = "#984ea3")

custom_shapes <- c("Barts" = 21, 
                   "GOSH" = 22, 
                   "Lancs" = 23, 
                   "UCLH" = 24)

custom_shapes_2 <- c("Median age" = 21, 
                     "Proportion male" = 22)

plot_count <- function(starts, level = "ATC 2nd"){
  counts %>%
    left_join(
      atc_ref %>% 
        filter(concept_class_id == level,
               str_starts(concept_code, starts))) %>%
    filter(!is.na(concept_class_id)) |> 
    ungroup() |> 
    ggplot() +
    facet_grid(concept_code ~ ., scales = "free_y", space = "free") +
    geom_col(aes(
      x = count, 
      y = reorder_within(cohort_name, count, concept_code, fun = sum),
      fill = cdm_name
    ), width = 1, colour = 'grey30') +
    scale_y_reordered()+
    scale_fill_manual(values = custom_colors)  +  
    scale_x_continuous(label=scales::comma) +
    theme_bw() +
    theme(legend.position = "top", legend.title = element_blank(),
      plot.margin = margin(0.5, 0.5, 0.5, 0.5, unit = "cm"),
      plot.title = element_text(size = 15, face = "bold"),
      strip.text.y = element_text(angle = 0, face = "bold"),
      strip.background = element_rect(fill = "grey95"),
      axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm")),
      axis.title.y = element_blank(),
      axis.text = element_text(size = 10),
      panel.spacing = unit(0.15, "lines"),
      panel.grid.major.y = element_blank(),
    )+
    labs(x = "Number of new users", y = "")
  
}

plot_median_age <- function(starts, level = "ATC 2nd"){
res |> 
  filterSettings(result_type == "summarise_characteristics") |> 
  filter(variable_name %in% c("Age")) |> 
  filter(estimate_name %in% c("median")) |> 
  tidy() |> 
  filter(str_detect(cohort_name, "_first")) |> 
  select("cdm_name", "cohort_name", "median") |> 
  inner_join(
    atc_ref %>% 
      filter(concept_class_id == level,
             str_starts(concept_code, starts))) |> 
  ggplot() +
  facet_grid(concept_code ~ ., scales = "free_y", space = "free") +
  geom_point(aes(
    x = median, 
    y = reorder_within(cohort_name, median, concept_code, fun = max),
    fill = cdm_name, 
    shape = cdm_name
  ), colour = "black", size = 3) +
  scale_y_reordered()+
  scale_fill_manual(values = custom_colors)  +  
  scale_shape_manual(values = custom_shapes) +
  theme_bw() +
  theme(legend.position = "top", legend.title = element_blank(),
        plot.margin = margin(0.5, 0.5, 0.5, 0.5, unit = "cm"),
        plot.title = element_text(size = 15, face = "bold"),
        strip.text.y = element_text(angle = 0, face = "bold"),
        strip.background = element_rect(fill = "grey95"),
        axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm")),
        axis.title.y = element_blank(),
        axis.text = element_text(size = 10),
        panel.spacing = unit(0.15, "lines"),
        panel.grid.major.y = element_blank(),
  )+
  labs(x = "Median Age", y = "")
}

plot_proportion_male <- function(starts, level = "ATC 2nd"){
  res |> 
    filterSettings(result_type == "summarise_characteristics") |> 
    filter(variable_name %in% c("Sex")) |> 
    filter(variable_level %in% c("Male")) |> 
    filter(estimate_name %in% c("percentage")) |> 
    tidy() |> 
    filter(str_detect(cohort_name, "_first")) |> 
    select("cdm_name", "cohort_name", "percentage") |> 
    inner_join(
      atc_ref %>% 
        filter(concept_class_id == level,
               str_starts(concept_code, starts))) |>  
    ggplot() +
    facet_grid(concept_code ~ ., scales = "free_y", space = "free") +
    geom_point(aes(
      x = percentage, 
      y = reorder_within(cohort_name, percentage, concept_code, fun = max),
      fill = cdm_name, 
      shape = cdm_name
    ), colour = "black", size = 3) +
    scale_y_reordered()+
    scale_fill_manual(values = custom_colors)  +  
    scale_shape_manual(values = custom_shapes) +
    theme_bw() +
    theme(legend.position = "top", legend.title = element_blank(),
          plot.margin = margin(0.5, 0.5, 0.5, 0.5, unit = "cm"),
          plot.title = element_text(size = 15, face = "bold"),
          strip.text.y = element_text(angle = 0, face = "bold"),
          strip.background = element_rect(fill = "grey95"),
          axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm")),
          axis.title.y = element_blank(),
          axis.text = element_text(size = 10),
          panel.spacing = unit(0.15, "lines"),
          panel.grid.major.y = element_blank(),
    )+
    labs(x = "Percentage male", y = "") +
    xlim(0, 100) +
    geom_vline(aes(xintercept = 50), linetype = "dotted")
}

plot_median_age_and_sex <- function(starts, level = "ATC 2nd"){
  
bind_rows(res |> 
    filterSettings(result_type == "summarise_characteristics") |> 
    filter(variable_name %in% c("Sex")) |> 
    filter(variable_level %in% c("Male")) |> 
    filter(estimate_name %in% c("percentage")) |> 
    tidy() |> 
    rename("estimate" = "percentage") |> 
  mutate(line_intercept = 50,
         type = "Proportion male"),
res |> 
  filterSettings(result_type == "summarise_characteristics") |> 
  filter(variable_name %in% c("Age")) |> 
  filter(estimate_name %in% c("median")) |> 
  tidy()|> 
  mutate(type = "Median age") |> 
  rename("estimate" = "median")) |> 
  filter(str_detect(cohort_name, "_first")) |> 
  select("cdm_name", "cohort_name", "estimate", "type", "line_intercept") |> 
  inner_join(
      atc_ref %>% 
        filter(concept_class_id == level,
               str_starts(concept_code, starts))) |> 
    ggplot() +
    facet_grid(concept_code ~ type, scales = "free", space = "free", switch = "x") +
    geom_point(aes(
      x = estimate, 
      y = reorder_within(cohort_name, estimate, concept_code, fun = max),
      fill = cdm_name, 
      shape = type, colour = cdm_name
    ), size = 3) +
    scale_y_reordered()+
    scale_colour_manual(values = custom_colors)  + 
    scale_fill_manual(values = custom_colors)  +   
    scale_shape_manual(values = custom_shapes_2) +
    theme_bw() +
    theme(legend.position = "top", legend.title = element_blank(),
          plot.margin = margin(0.5, 0.5, 0.5, 0.5, unit = "cm"),
          plot.title = element_text(size = 15, face = "bold"),
          strip.text.y = element_text(angle = 0, face = "bold"),
          strip.text.x = element_text(angle = 0, face = "bold"),
          strip.background.y = element_rect(fill = "grey95"),
          strip.background.x = element_rect(fill = "white", color = NA), 
          axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm")),
          axis.title.y = element_blank(),
          axis.text = element_text(size = 10),
          panel.spacing.y = unit(0.15, "lines"),
          panel.spacing.x = unit(0.85, "lines"),
          strip.placement = "outside",
          panel.grid.major.y = element_blank(),
    ) +
  xlab("")+
  geom_vline(aes(xintercept = line_intercept), linetype = "dotted") +
  guides(shape = "none")

}

custom_shapes_3 <- c("b) Median age" = 21, 
                     "c) Proportion male" = 22)

plot_count_age_and_sex  <- function(starts, level = "ATC 2nd"){
  plot_data<-bind_rows(tidy(res |> 
                              filterSettings(result_type == "summarise_characteristics") |> 
                              filter(variable_name == "Number subjects")) |> 
                         rename("estimate" = "count")|> 
                         mutate(type = "a) Number of new users") ,
                       res |> 
                         filterSettings(result_type == "summarise_characteristics") |> 
                         filter(variable_name %in% c("Sex")) |> 
                         filter(variable_level %in% c("Male")) |> 
                         filter(estimate_name %in% c("percentage")) |> 
                         tidy() |> 
                         rename("estimate" = "percentage") |> 
                         mutate(line_intercept = 50,
                                type = "c) Proportion male"),
                       res |> 
                         filterSettings(result_type == "summarise_characteristics") |> 
                         filter(variable_name %in% c("Age")) |> 
                         filter(estimate_name %in% c("median")) |> 
                         tidy()|> 
                         mutate(type = "b) Median age") |> 
                         rename("estimate" = "median")) |> 
    filter(str_detect(cohort_name, "_all", negate = TRUE)) |>  
    select("cdm_name", "cohort_name", "estimate", "type", "line_intercept") |> 
    inner_join(
      atc_ref %>% 
        filter(concept_class_id == level,
               str_starts(concept_code, starts)))
  
  ggplot() +
    ggh4x::facet_grid2(concept_code ~ type, scales = "free", space = "free_y", switch = "x") +
    ggh4x::force_panelsizes(cols = c(3, 2, 2)) +
    geom_bar(data = plot_data |> filter(type == "a) Number of new users"),
             aes(x = estimate,
                 y = reorder_within(cohort_name, estimate, concept_code, fun = sum),
                 fill = cdm_name),
             colour = "black",
             stat = "identity",
             position = "stack") +
    geom_point(aes(
      x = estimate, 
      y = reorder_within(cohort_name, estimate, concept_code, fun = max),
      fill = cdm_name, 
      shape = type
    ), 
    colour = "black",
    size = 3, data = plot_data |> filter(type != "a) Number of new users")) +
    scale_y_reordered()+
    scale_fill_manual(values = custom_colors)  +   
    scale_shape_manual(values = custom_shapes_3) +
    theme_bw() +
    theme(legend.position = "top", legend.title = element_blank(),
          plot.margin = margin(0.5, 0.5, 0.5, 0.5, unit = "cm"),
          plot.title = element_text(size = 15, face = "bold"),
          strip.text.y = element_text(angle = 0, face = "bold"),
          strip.text.x = element_text(angle = 0, face = "bold"),
          strip.background.y = element_rect(fill = "grey95"),
          strip.background.x = element_rect(fill = "white", color = NA), 
          axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm")),
          axis.title.y = element_blank(),
          axis.text = element_text(size = 10),
          panel.spacing.y = unit(0.15, "lines"),
          panel.spacing.x = unit(0.15, "lines"),
          strip.placement = "outside",
          panel.grid.major.y = element_blank()
    ) + 
    scale_x_continuous(label=scales::comma) +
    xlab("") +
    geom_vline(aes(xintercept = line_intercept), linetype = "dotted", 
               data = plot_data)  +
    guides(shape = "none", colour = "none",
           fill = guide_legend(override.aes = list(shape = NA)))
}

plot_indications <- function(working_concept_code, level = "ATC 2nd", working_window = "-14 to 14"){
tidy(res |> filterSettings(result_type == "summarise_characteristics")) |> 
  filter(str_detect(variable_name,  working_window)) |>
  filter(str_detect(cohort_name, "_all", negate = TRUE)) |> 
  inner_join(
    atc_ref    %>%
      filter(concept_code== working_concept_code)
  ) |>
  filter(!is.na(percentage))  |>
  filter(percentage > 10) |> 
  select(cdm_name, cohort_name, cohort_name, percentage, concept_code,
         variable_level) |> 
    inner_join(
      atc_ref    %>%
        filter(stringr::str_starts(concept_code, working_concept_code)) |> 
        filter(concept_class_id== level) |> 
        select(cohort_name, 
               atc = "concept_code")
    ) |> 
    mutate(name = paste0(atc, ": ", cohort_name)) |> 
  ggplot() +
  facet_wrap(vars(name), scales = "free_y")+
  geom_bar(
    aes(percentage, cdm_name, fill = variable_level),
    colour = "black",
    stat = "identity",
    position = position_dodge()
  ) +
    theme_bw()  +
    theme(legend.position = "top", legend.title = element_blank(),
          plot.margin = margin(0.5, 0.5, 0.5, 0.5, unit = "cm"),
          plot.title = element_text(size = 15, face = "bold"),
          strip.text = element_text(angle = 0, face = "bold"),
          strip.background = element_rect(fill = "grey95"),
          axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm")),
          axis.title.y = element_blank(),
          axis.text = element_text(size = 10),
          panel.spacing = unit(0.15, "lines"),
          panel.grid.major.y = element_blank(),
    )+
    ylab("") +
    xlab("Percentage")+
    guides(fill = guide_legend(ncol = 3)) 
}

plot_drug_indications <- function(working_name, 
                                  min_percent){
# for facet title
cohort_count <- tidy(res |> filterSettings(result_type == "summarise_characteristics")) |> 
  filter(variable_name == "Number records") |> 
  filter(cohort_name == working_name) |> 
  mutate(cdm_name_count = paste0(cdm_name, "\n(N: ",
                                 count, ")")) |> 
  select(cdm_name, cdm_name_count)

# with minimum in at least one db
vars_to_plot <- tidy(res |> filterSettings(result_type == "summarise_characteristics")) |> 
  filter(str_detect(variable_name,  "-14")) |>
  filter(str_detect(cohort_name, "_all", negate = TRUE)) |> 
  filter(cohort_name ==  working_name) |>
  filter(!is.na(percentage),
         percentage > min_percent) |> 
  select(variable_level) |> 
  distinct()

vars_to_plot <- bind_rows(vars_to_plot,
          tibble(variable_level = "Inpatient"))

plot_data <- tidy(res |> filterSettings(result_type == "summarise_characteristics")) |> 
  mutate(variable_level = if_else(variable_name == "Inpatient",
                                          "Inpatient", variable_level)) |> 
  filter(str_detect(cohort_name, "_all", negate = TRUE)) |> 
  filter(cohort_name ==  working_name) |>
  inner_join(vars_to_plot) |> 
  left_join(cohort_count) |> 
  select(cdm_name_count, cohort_name, percentage, variable_name,
         variable_level)

var_order <- plot_data %>%
  group_by(variable_level) %>%
  summarise(avg_percentage = max(percentage, na.rm = TRUE)) %>%
  arrange(desc(avg_percentage)) %>%
  pull(variable_level)


plot_data |> 
  mutate(variable_level = factor(variable_level, levels = rev(var_order))) |> 
  ggplot() +
  facet_grid(variable_name ~ cdm_name_count, scales = "free_y", space = "free") +
  geom_bar(
    aes(
      x = percentage, 
      y = variable_level,
      fill = cdm_name_count
    ),
    colour = "black",
    stat = "identity",
    position = position_dodge()
  ) +
  theme_bw() +
  theme(
    legend.position = "none",
    legend.title = element_blank(),
    plot.margin = margin(0.5, 0.5, 0.5, 0.5, unit = "cm"),
    plot.title = element_text(size = 15, face = "bold"),
    strip.text = element_text(angle = 0, face = "bold"),
    strip.background = element_rect(fill = "grey95"),
    axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm")),
    axis.title.y = element_blank(),
    axis.text = element_text(size = 10),
    panel.spacing = unit(0.15, "lines"),
    panel.grid.major.y = element_blank()
  ) +
  ylab("") +
  xlab("Percentage") +
  guides(fill = guide_legend(ncol = 3)) +
  scale_fill_viridis(discrete = TRUE)

}


```

```{r, echo = FALSE, warning = FALSE, message=FALSE}
tableOmopSnapshot(res)
```

```{r, echo = FALSE, warning = FALSE, message=FALSE}
library(gt)
tidy(res |> 
       filterSettings(result_type == "summarise_characteristics")) |> 
  filter(variable_name %in% c("Number records", "Number subjects")) |> 
  filter(variable_name == "Number subjects") |> 
  filter(str_detect(cohort_name, "_all", negate = TRUE)) |> 
  select("cdm_name", "cohort_name", "count") |> 
  mutate(flag = "Yes") |> 
  select("cdm_name", "cohort_name", "flag") |> 
  pivot_wider(names_from = "cdm_name", 
              values_from = "flag") %>%
  mutate(across(everything(), ~ replace_na(., "No"))) |> 
  arrange(cohort_name) |> 
  # mutate(row = row_number()) |> 
  # relocate(row) |> 
  rename("High-cost medicine" = "cohort_name") |> 
  visOmopResults::visTable() |>
  tab_style(
    style = cell_fill(color = "red"),
    locations = cells_body(
      columns = c(Barts),
      rows = Barts == "No"
    )
  ) |>
  tab_style(
    style = cell_fill(color = "green"),
    locations = cells_body(
      columns = c(Barts),
      rows = Barts == "Yes"
    )
  ) |>
  tab_style(
    style = cell_fill(color = "red"),
    locations = cells_body(
      columns = c(Gosh),
      rows = Gosh == "No"
    )
  ) |>
  tab_style(
    style = cell_fill(color = "green"),
    locations = cells_body(
      columns = c(Gosh),
      rows = Gosh == "Yes"
    )
  ) |>
  tab_style(
    style = cell_fill(color = "red"),
    locations = cells_body(
      columns = c(Lancs),
      rows = Lancs == "No"
    )
  ) |>
  tab_style(
    style = cell_fill(color = "green"),
    locations = cells_body(
      columns = c(Lancs),
      rows = Lancs == "Yes"
    )
  ) |>
  tab_style(
    style = cell_fill(color = "red"),
    locations = cells_body(
      columns = c(Uclh),
      rows = Uclh == "No"
    )
  ) |>
  tab_style(
    style = cell_fill(color = "green"),
    locations = cells_body(
      columns = c(Uclh),
      rows = Uclh == "Yes"
    )
  )
```



```{r, echo = FALSE, warning = FALSE, message=FALSE}
#distinct meds
tidy(res |> 
       filterSettings(result_type == "summarise_characteristics")) |> 
  filter(variable_name %in% c("Number records", "Number subjects")) |> 
  filter(variable_name == "Number subjects") |> 
  select(cohort_name) |> 
  distinct() |> 
  tally()

tidy(res |> 
       filterSettings(result_type == "summarise_characteristics")) |> 
  filter(variable_name %in% c("Number records", "Number subjects")) |> 
  filter(variable_name == "Number subjects") |> 
  select(cdm_name, cohort_name) |> 
  distinct() |> 
  group_by(cdm_name) |> 
  tally() |> 
  visTable()
```


# Most frequent high-cost medicines
```{r, echo = FALSE, warning = FALSE, message=FALSE}
tidy(res |> 
       filterSettings(result_type == "summarise_characteristics")) |> 
  filter(variable_name %in% c("Number records", "Number subjects")) |> 
  filter(variable_name == "Number subjects") |> 
  mutate(cohort_name= str_replace_all(cohort_name, "_", " ")) |>
  mutate(cohort_name= CodelistGenerator:::tidyWords(cohort_name)) |>
  mutate(cohort_name= str_to_title(cohort_name)) |>
  group_by(cdm_name) |> 
  slice_max(count, n = 10) |> 
  mutate(rank = row_number()) |> 
  mutate(tot = paste0(cohort_name, " (", scales::comma(count), ")")) |> 
  select(rank, cdm_name, tot) |> 
  pivot_wider(names_from = "cdm_name", values_from = "tot") |> 
  visTable()
```

```{r, echo = FALSE, warning = FALSE, message=FALSE}
counts <- tidy(res |> 
       filterSettings(result_type == "summarise_characteristics")) |> 
  filter(variable_name %in% c("Number records", "Number subjects")) |> 
  filter(variable_name == "Number subjects") |> 
  mutate(cohort_name= str_replace_all(cohort_name, "_", " ")) |>
  mutate(cohort_name= CodelistGenerator:::tidyWords(cohort_name)) |>
  mutate(cohort_name= str_to_title(cohort_name)) |> 
  select(cdm_name, cohort_name, count)

bind_rows(
  counts,
  counts |> 
  group_by(cohort_name) |> 
  summarise(count = sum(count)) |> 
  mutate(cdm_name = "total")) |> 
  mutate(count = scales::comma(count)) |> 
  pivot_wider(names_from = cdm_name, values_from = count) |> 
  visTable()
```
    
# Most frequent conditions of interest 
```{r, echo = FALSE, warning = FALSE, message=FALSE}
getTopCmorbs <- function(working_cdm_name){
  tidy(res |> filterSettings(result_type == "summarise_characteristics")) |> 
    filter(str_detect(variable_name,  "-14")) |> 
    filter(str_detect(variable_name,  "Icd")) |> 
    filter(cdm_name == working_cdm_name) |> 
    filter(!is.na(count) & 
             count >= 5) |> 
    filter(percentage >= 10) |> 
    group_by(cdm_name, variable_level) |> 
    tally() |> 
    arrange(desc(n)) |> 
    mutate(rank = row_number() ) |> 
    filter(rank <= 10)  |> 
    mutate(cmorb = paste0(variable_level, " (",
                          n, ")")) |> 
    select(rank, cdm_name, cmorb)
}

bind_rows(getTopCmorbs("Barts"),
getTopCmorbs("GOSH"),
getTopCmorbs("Lancs"),
getTopCmorbs("UCLH")) |> 
  pivot_wider(names_from = cdm_name, 
              values_from = cmorb) |> 
  visTable()
```

# ATC Group A: ALIMENTARY TRACT AND METABOLISM
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=13, out.width = '100%', dpi=600}
plot_count_age_and_sex("A")

getMeds <- function(atc_starts){
  intersect(tidy(res |> filterSettings(result_type == "summarise_characteristics")) |>
                      pull(cohort_name) |>
                      unique(),
                    atc_ref |>
                      filter(str_starts(concept_code, atc_starts)) |>
                      pull(name) |>
                      unique())

}
# 
# working_meds <- getMeds("A")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group B: BLOOD AND BLOOD FORMING ORGANS
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=10, out.width = '100%', dpi=600}
plot_count_age_and_sex("B")

# working_meds <- getMeds("B")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group C: CARDIOVASCULAR SYSTEM
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=6, out.width = '100%', dpi=600}
plot_count_age_and_sex("C")

# working_meds <- getMeds("C")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group D: DERMATOLOGICALS
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=10, out.width = '100%', dpi=600}
plot_count_age_and_sex("D")

# working_meds <- getMeds("D")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group G: GENITO URINARY SYSTEM AND SEX HORMONES

```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=5, fig.height=6, out.width = '100%', dpi=600}
plot_count_age_and_sex("G")

# working_meds <- getMeds("G")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group H: SYSTEMIC HORMONAL PREPARATIONS, EXCL. SEX HORMONES AND INSULINS
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=10, out.width = '100%', dpi=600}
plot_count_age_and_sex("H")

# working_meds <- getMeds("H")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group J: ANTIINFECTIVES FOR SYSTEMIC USE
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=10, fig.height=11, out.width = '100%', dpi=600}
plot_count_age_and_sex("J")

# working_meds <- getMeds("J")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group L01: Antineoplastic agents
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=9, fig.height=12, out.width = '100%', dpi=600}
plot_count_age_and_sex("L01", level = "ATC 3rd")
ggsave(filename = 'lo1.png', width = 7, height = 10, dpi = 900)

# working_meds <- getMeds("L01")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }

```

# ATC Group L02: Endocrine therapy
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=12, out.width = '100%', dpi=600}
plot_count_age_and_sex("L02", level = "ATC 3rd")

# working_meds <- getMeds("L02")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group L03: Immunostimulants 
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=12, out.width = '100%', dpi=600}
plot_count_age_and_sex("L03", level = "ATC 3rd")

# working_meds <- getMeds("L03")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group L04: Immunosuppressants 
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=10, fig.height=11, out.width = '100%', dpi=600}
plot_count_age_and_sex("L04", level = "ATC 4th")

# working_meds <- getMeds("L04")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```


# ATC Group M: MUSCULO-SKELETAL SYSTEM
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=10, out.width = '100%', dpi=600}
plot_count_age_and_sex("M")

# working_meds <- getMeds("M")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group N: NERVOUS SYSTEM
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=10, out.width = '100%', dpi=600}
plot_count_age_and_sex("N")

# working_meds <- getMeds("N")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group R: RESPIRATORY SYSTEM
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=10, out.width = '100%', dpi=600}
plot_count_age_and_sex("R")

# working_meds <- getMeds("R")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group S: SENSORY ORGANS
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=10, out.width = '100%', dpi=600}
plot_count_age_and_sex("S")

# working_meds <- getMeds("S")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# ATC Group V: VARIOUS
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis', fig.align="center", fig.width=8, fig.height=10, out.width = '100%', dpi=600}
plot_count_age_and_sex("V")

# working_meds <- getMeds("V")
# for(i in seq_along(working_meds)){
# print(plot_drug_indications(working_meds[[i]], 5) +
#         ggtitle(paste0("Conditions among new users of ", working_meds[[i]])))
# }
```

# Table characteristics
```{r, echo=FALSE, warning = FALSE, message=FALSE, results = 'asis'}

# res |> 
#   filterSettings(result_type == "summarise_characteristics") |> 
#   filter(
#     # group_level %in% working_cohorts,
#          variable_name %in% c("Number subjects", "Age", "Age group", "Sex"),
#          !estimate_name %in% c("mean", "sd", "range")) |> 
#   mutate(variable_level = if_else(is.na(variable_level), "", variable_level)) |> 
#   arrange(group_level) |> 
#   tableCharacteristics(header = c(), 
#                        groupColumn = c("cohort_name", "cdm_name"))
```
